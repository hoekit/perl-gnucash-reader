# perl-gnucash-reader
----
A perlish module and some useful tools to access GnuCash data.

## Usage

1. Run directly from command line:

		$ perl -MGnuCashReader -e 'print GnuCashReader::acct_balance("Assets","Accounts.gnucash");'

2. Use in a perl script:

		use GnuCashReader qw(acct_balance);

		# Define GnuCash sqlite file
		my $db = "Accounts_sql.gnucash";

		# Print balance of "Current Assets"
		print acct_balance("Assets:Current Assets", $db);


## Dependencies

> <code>sqlite3</code> should run at the command line .e.g:

	$ sqlite3 
	SQLite version 3.7.17 2013-05-20 00:56:22
	Enter ".help" for instructions
	Enter SQL statements terminated with a ";"
	sqlite> 

> GnuCash file is in sqlite3 format:

	$ file simple-checkbook.gnucash 
	simple-checkbook.gnucash: SQLite 3.x database

It is quite easy to [convert from XML format to SQLite format][1].

----
## Useful Tools

### gc_check.pl

**Purpose**: Check account balances against a list of conditions and prints
matching conditions. Also raises error if account is not found.

1. Define conditions in a file. Defaults to <code>$HOME/.gc_checks.txt</code>:

		# File: $HOME/.gc_checks.txt
		"Assets:Current Assets:Checking Account" < 1000
		"Assets:Current Assets:Checking Account" >= 1000
		"Assets:No Such Account" > 100

2. Run checks:

		$ gc_check.pl
		"Assets:Current Assets:Checking Account" < 1000
		ERROR: "Assets:No Such Account" not found!


[1]: http://gnucash.1415818.n4.nabble.com/No-SQL-backend-for-2-4-in-Linux-td3170733.html
